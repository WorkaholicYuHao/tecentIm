{"remainingRequest":"/Users/yuhao/TIMSDK/H5/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuhao/TIMSDK/H5/src/components/group/group-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuhao/TIMSDK/H5/src/components/group/group-list.vue","mtime":1616982605601},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState } from 'vuex'\nimport { Dialog, Autocomplete } from 'element-ui'\nimport CreateGroup from './create-group.vue'\nimport GroupItem from './group-item.vue'\nexport default {\n  data() {\n    return {\n      groupID: '',\n      hideSearchLoading: true\n    }\n  },\n  components: {\n    GroupItem,\n    ElDialog: Dialog,\n    CreateGroup,\n    ElAutocomplete: Autocomplete\n  },\n  computed: {\n    groupList: function() {\n      return this.$store.state.group.groupList\n    },\n    ...mapState({\n      createGroupModelVisible: state => {\n        return state.group.createGroupModelVisible\n      }\n    })\n  },\n  methods: {\n    onGroupUpdated(groupList) {\n      this.$store.dispatch('updateGroupList', groupList)\n    },\n    createGroup() {},\n    closeCreateGroupModel() {\n      this.$store.commit('updateCreateGroupModelVisible', false)\n    },\n    searchGroupByID(queryString, showInSearchResult) {\n      if (queryString.trim().length > 0) {\n        this.hideSearchLoading = false\n        this.tim\n          .searchGroupByID(queryString)\n          .then(({ data: { group } }) => {\n            showInSearchResult([group])\n          })\n          .catch(() => {\n            this.$store.commit('showMessage', {\n              message: '没有找到该群',\n              type: 'error'\n            })\n          })\n      } else {\n        this.hideSearchLoading = true\n      }\n    },\n    showCreateGroupModel() {\n      this.$store.commit('updateCreateGroupModelVisible', true)\n    },\n    applyJoinGroup(group) {\n      this.tim\n        .joinGroup({ groupID: group.groupID })\n        .then(async res => {\n          switch(res.data.status) {\n            case this.TIM.TYPES.JOIN_STATUS_WAIT_APPROVAL:\n              this.$store.commit('showMessage', {\n                message: '申请成功，等待群管理员确认。',\n                type: 'info'\n              })\n              break\n            case this.TIM.TYPES.JOIN_STATUS_SUCCESS:\n              await this.$store.dispatch(\n                'checkoutConversation',\n                `GROUP${res.data.group.groupID}`\n              )\n              this.$store.commit('showMessage', {\n                message: '加群成功',\n                type: 'success'\n              })\n              break\n            case this.TIM.TYPES.JOIN_STATUS_ALREADY_IN_GROUP:\n              this.$store.commit('showMessage', {\n                message: '您已经是群成员了，请勿重复加群哦！',\n                type: 'info'\n              })\n              break\n            default: break\n          }\n        })\n        .catch(error => {\n          this.$store.commit('showMessage', {\n            message: error.message,\n            type: 'error'\n          })\n        })\n    }\n  }\n}\n",null]}