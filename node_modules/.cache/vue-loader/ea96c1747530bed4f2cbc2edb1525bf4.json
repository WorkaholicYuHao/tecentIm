{"remainingRequest":"/Users/yuhao/TIMSDK/H5/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuhao/TIMSDK/H5/src/components/conversation/conversationProfile/user-profile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuhao/TIMSDK/H5/src/components/conversation/conversationProfile/user-profile.vue","mtime":1616982605598},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState } from 'vuex'\nexport default {\n  props: {\n    userProfile: {\n      type: Object,\n      required: true\n    }\n  },\n  computed: {\n    ...mapState({\n      blacklist: state => state.blacklist.blacklist,\n      myUserID: state => state.user.currentUserProfile.userID\n    }),\n    isInBlacklist() {\n      return this.blacklist.findIndex(item => item.userID === this.userProfile.userID) >= 0\n    },\n    gender() {\n      switch (this.userProfile.gender) {\n        case this.TIM.TYPES.GENDER_MALE:\n          return '男'\n        case this.TIM.TYPES.GENDER_FEMALE:\n          return '女'\n        default:\n          return '未设置'\n      }\n    },\n    genderClass() {\n      switch (this.userProfile.gender) {\n        case this.TIM.TYPES.GENDER_MALE:\n          return 'icon-male'\n        case this.TIM.TYPES.GENDER_FEMALE:\n          return 'icon-female'\n        default:\n          return ''\n      }\n    }\n  },\n  methods: {\n    addToBlackList() {\n      this.tim\n        .addToBlacklist({ userIDList: [this.userProfile.userID] })\n        .then(() => {\n          this.$store.dispatch('getBlacklist')\n        })\n        .catch(imError => {\n          this.$store.commit('showMessage', {\n            message: imError.message,\n            type: 'error'\n          })\n        })\n    },\n    removeFromBlacklist() {\n      this.tim.removeFromBlacklist({ userIDList: [this.userProfile.userID] }).then(() => {\n        this.$store.commit('removeFromBlacklist', this.userProfile.userID)\n      })\n      .catch(error => {\n          this.$store.commit('showMessage', {\n            type: 'error',\n            message: error.message\n          })\n        })\n    }\n  }\n}\n",null]}