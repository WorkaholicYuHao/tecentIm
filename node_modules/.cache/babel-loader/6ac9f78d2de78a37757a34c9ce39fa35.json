{"remainingRequest":"/Users/yuhao/TIMSDK/H5/node_modules/thread-loader/dist/cjs.js!/Users/yuhao/TIMSDK/H5/node_modules/babel-loader/lib/index.js!/Users/yuhao/TIMSDK/H5/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuhao/TIMSDK/H5/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuhao/TIMSDK/H5/src/components/group-live/components/live-player.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuhao/TIMSDK/H5/src/components/group-live/components/live-player.vue","mtime":1616982605599},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _Slider2 from \"element-ui/lib/theme-chalk/slider.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Slider from \"element-ui/lib/slider\";\nimport _defineProperty from \"/Users/yuhao/TIMSDK/H5/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nimport liveHeader from \"./live-header\"; // import liveShare from './live-share'\n\nimport poster from \"../../../assets/image/poster.png\";\nexport default {\n  name: 'livePlayer',\n  data: function data() {\n    return {\n      player: null,\n      isPlaying: true,\n      // 是否正在播放\n      volumeValue: 70,\n      showSetVolume: false,\n      isMute: false\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    user: function user(state) {\n      return state.user;\n    },\n    roomID: function roomID(state) {\n      return state.groupLive.groupLiveInfo.roomID;\n    },\n    anchorID: function anchorID(state) {\n      return state.groupLive.groupLiveInfo.anchorID;\n    }\n  })),\n  mounted: function mounted() {\n    var _this = this;\n\n    this.init();\n    var volumeBox = this.$refs.volumeBox;\n    var progressBox = this.$refs.progressBox;\n    progressBox.addEventListener('mouseover', function () {\n      _this.showSetVolume = true;\n    });\n    progressBox.addEventListener('mouseout', function () {\n      _this.showSetVolume = false;\n    });\n    volumeBox.addEventListener('mouseover', function () {\n      _this.showSetVolume = true;\n    });\n    volumeBox.addEventListener('mouseout', function () {\n      _this.showSetVolume = false;\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.stopPlay();\n  },\n  components: {\n    liveHeader: liveHeader,\n    // liveShare,\n    elSlider: _Slider\n  },\n  methods: {\n    // 初始化\n    init: function init() {\n      this.player = this.TWebLive.createPlayer();\n      this.player.setCustomConfig({\n        autoplay: true,\n        poster: {\n          style: 'cover',\n          src: poster\n        },\n        pausePosterEnabled: false,\n        wording: {\n          1: '您观看的直播已结束哦~ ',\n          2: '您观看的直播已结束哦~ ',\n          4: '您观看的直播已结束哦~ ',\n          13: '您观看的直播已结束',\n          2032: '请求视频失败，请检查网络',\n          2048: '请求m3u8文件失败，可能是网络错误或者跨域问题'\n        }\n      }); // 播放时\n\n      this.player.on(this.TWebLive.EVENT.PLAYER_PLAYING, this.onPlayerPlaying); // 暂停\n\n      this.player.on(this.TWebLive.EVENT.PLAYER_PAUSE, this.onPlayerPause); // 浏览器不允许自动播放\n\n      this.player.on(this.TWebLive.EVENT.PLAYER_AUTOPLAY_NOT_ALLOWED, this.onPlayerAutoPlayNotAllowed);\n      this.player.on(this.TWebLive.EVENT.PLAYER_ERROR, this.onPlayerError);\n      this.setRenderView();\n      this.$bus.$emit('join-group-live-avchatroom');\n    },\n    // eslint-disable-next-line no-unused-vars\n    onPlayerPlaying: function onPlayerPlaying(event) {},\n    // eslint-disable-next-line no-unused-vars\n    onPlayerPause: function onPlayerPause(event) {},\n    // eslint-disable-next-line no-unused-vars\n    onPlayerAutoPlayNotAllowed: function onPlayerAutoPlayNotAllowed(event) {\n      this.$store.commit('showMessage', {\n        message: '不能自动播放',\n        type: 'info'\n      });\n    },\n    // eslint-disable-next-line no-unused-vars\n    onPlayerError: function onPlayerError(event) {},\n    // 设置渲染界面\n    setRenderView: function setRenderView() {\n      this.player.setRenderView({\n        elementID: 'player-container'\n      });\n      this.startPlay();\n    },\n    //开始播放\n    startPlay: function startPlay() {\n      var _this2 = this;\n\n      var streamID = \"\".concat(this.user.sdkAppID, \"_\").concat(this.roomID, \"_\").concat(this.anchorID, \"_main\");\n      var flv = \"https://tuikit.qcloud.com/live/\".concat(streamID, \".flv\");\n      var hls = \"https://tuikit.qcloud.com/live/\".concat(streamID, \".m3u8\");\n      var url = \"https://flv=\".concat(encodeURIComponent(flv), \"&hls=\").concat(encodeURIComponent(hls));\n      this.player.startPlay(url).then(function () {\n        _this2.isPlaying = true;\n      }).catch(function () {});\n    },\n    resumeAudio: function resumeAudio() {\n      var _this3 = this;\n\n      this.player.resumeAudio().then(function () {\n        _this3.isMute = false;\n      }).catch(function () {});\n    },\n    pauseAudio: function pauseAudio() {\n      var _this4 = this;\n\n      this.player.pauseAudio().then(function () {\n        _this4.isMute = true;\n      }).catch(function () {});\n    },\n    //暂停播放\n    pauseVideo: function pauseVideo() {\n      var _this5 = this;\n\n      this.player.pauseVideo().then(function () {\n        _this5.isPlaying = false;\n      }).catch(function () {});\n    },\n    // 恢复播放\n    resumeVideo: function resumeVideo() {\n      var _this6 = this;\n\n      this.player.resumeVideo().then(function () {\n        _this6.isPlaying = true;\n      }).catch(function () {});\n    },\n    setPlayoutVolume: function setPlayoutVolume() {\n      this.player.setPlayoutVolume(this.volumeValue);\n    },\n    // 停止播放\n    stopPlay: function stopPlay() {\n      this.player.stopPlay();\n      this.isPlaying = false;\n    }\n  }\n};",null]}