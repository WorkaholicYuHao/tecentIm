{"remainingRequest":"/Users/yuhao/TIMSDK/H5/node_modules/thread-loader/dist/cjs.js!/Users/yuhao/TIMSDK/H5/node_modules/babel-loader/lib/index.js!/Users/yuhao/TIMSDK/H5/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuhao/TIMSDK/H5/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuhao/TIMSDK/H5/src/components/group/group-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuhao/TIMSDK/H5/src/components/group/group-list.vue","mtime":1616982605601},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/yuhao/TIMSDK/H5/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/yuhao/TIMSDK/H5/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Autocomplete2 from \"element-ui/lib/theme-chalk/autocomplete.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Autocomplete from \"element-ui/lib/autocomplete\";\nimport _Dialog2 from \"element-ui/lib/theme-chalk/dialog.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Dialog from \"element-ui/lib/dialog\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nimport CreateGroup from \"./create-group.vue\";\nimport GroupItem from \"./group-item.vue\";\nexport default {\n  data: function data() {\n    return {\n      groupID: '',\n      hideSearchLoading: true\n    };\n  },\n  components: {\n    GroupItem: GroupItem,\n    ElDialog: _Dialog,\n    CreateGroup: CreateGroup,\n    ElAutocomplete: _Autocomplete\n  },\n  computed: _objectSpread({\n    groupList: function groupList() {\n      return this.$store.state.group.groupList;\n    }\n  }, mapState({\n    createGroupModelVisible: function createGroupModelVisible(state) {\n      return state.group.createGroupModelVisible;\n    }\n  })),\n  methods: {\n    onGroupUpdated: function onGroupUpdated(groupList) {\n      this.$store.dispatch('updateGroupList', groupList);\n    },\n    createGroup: function createGroup() {},\n    closeCreateGroupModel: function closeCreateGroupModel() {\n      this.$store.commit('updateCreateGroupModelVisible', false);\n    },\n    searchGroupByID: function searchGroupByID(queryString, showInSearchResult) {\n      var _this = this;\n\n      if (queryString.trim().length > 0) {\n        this.hideSearchLoading = false;\n        this.tim.searchGroupByID(queryString).then(function (_ref) {\n          var group = _ref.data.group;\n          showInSearchResult([group]);\n        }).catch(function () {\n          _this.$store.commit('showMessage', {\n            message: '没有找到该群',\n            type: 'error'\n          });\n        });\n      } else {\n        this.hideSearchLoading = true;\n      }\n    },\n    showCreateGroupModel: function showCreateGroupModel() {\n      this.$store.commit('updateCreateGroupModelVisible', true);\n    },\n    applyJoinGroup: function applyJoinGroup(group) {\n      var _this2 = this;\n\n      this.tim.joinGroup({\n        groupID: group.groupID\n      }).then( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(res) {\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.t0 = res.data.status;\n                  _context.next = _context.t0 === _this2.TIM.TYPES.JOIN_STATUS_WAIT_APPROVAL ? 3 : _context.t0 === _this2.TIM.TYPES.JOIN_STATUS_SUCCESS ? 5 : _context.t0 === _this2.TIM.TYPES.JOIN_STATUS_ALREADY_IN_GROUP ? 9 : 11;\n                  break;\n\n                case 3:\n                  _this2.$store.commit('showMessage', {\n                    message: '申请成功，等待群管理员确认。',\n                    type: 'info'\n                  });\n\n                  return _context.abrupt(\"break\", 12);\n\n                case 5:\n                  _context.next = 7;\n                  return _this2.$store.dispatch('checkoutConversation', \"GROUP\".concat(res.data.group.groupID));\n\n                case 7:\n                  _this2.$store.commit('showMessage', {\n                    message: '加群成功',\n                    type: 'success'\n                  });\n\n                  return _context.abrupt(\"break\", 12);\n\n                case 9:\n                  _this2.$store.commit('showMessage', {\n                    message: '您已经是群成员了，请勿重复加群哦！',\n                    type: 'info'\n                  });\n\n                  return _context.abrupt(\"break\", 12);\n\n                case 11:\n                  return _context.abrupt(\"break\", 12);\n\n                case 12:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }()).catch(function (error) {\n        _this2.$store.commit('showMessage', {\n          message: error.message,\n          type: 'error'\n        });\n      });\n    }\n  }\n};",null]}