{"remainingRequest":"/Users/yuhao/TIMSDK/H5/node_modules/babel-loader/lib/index.js!/Users/yuhao/TIMSDK/H5/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuhao/TIMSDK/H5/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuhao/TIMSDK/H5/src/components/group-live/components/live-pusher.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuhao/TIMSDK/H5/src/components/group-live/components/live-pusher.vue","mtime":1616982605600},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/yuhao/TIMSDK/H5/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/yuhao/TIMSDK/H5/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nimport { mapState } from 'vuex';\nimport liveHeader from \"./live-header\"; // import liveShare from './live-share'\n\nimport { formatTime } from \"../../../utils/date.js\";\nexport default {\n  name: 'livePusher',\n  data: function data() {\n    return {\n      pusher: null,\n      roomID: 0,\n      roomName: '',\n      isPushingStream: false,\n      // 是否正在推流\n      updateTimer: 0,\n      pusherTime: '00:00:00',\n      time: 0,\n      // 直播时长 秒\n      recordTimer: null,\n      // 记录直播时长\n      isMute: false,\n      //是否禁言\n      isStartCamera: true\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapState({\n    user: function user(state) {\n      return state.user;\n    },\n    groupLiveInfo: function groupLiveInfo(state) {\n      return state.groupLive.groupLiveInfo;\n    }\n  })), {}, {\n    anchorAvatar: function anchorAvatar() {\n      return this.user.currentUserProfile.avatar || 'https://imgcache.qq.com/open/qcloud/video/act/webim-avatar/avatar-2.png';\n    }\n  }),\n  created: function created() {\n    this.$store.commit('resetGroupLiveInfo', {\n      roomID: 0\n    });\n  },\n  mounted: function mounted() {\n    this.init();\n  },\n  beforeDestroy: function () {\n    var _beforeDestroy = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!this.isPushingStream) {\n                _context.next = 5;\n                break;\n              }\n\n              clearInterval(this.updateTimer);\n              clearInterval(this.recordTimer);\n              _context.next = 5;\n              return this.stopPush();\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function beforeDestroy() {\n      return _beforeDestroy.apply(this, arguments);\n    }\n\n    return beforeDestroy;\n  }(),\n  components: {\n    liveHeader: liveHeader // liveShare,\n\n  },\n  methods: {\n    // 初始化\n    init: function init() {\n      this.pusher = this.TWebLive.createPusher({\n        userID: this.user.userID\n      });\n      this.setRenderView();\n      this.pusher.on(this.TWebLive.EVENT.RTC_CONNECTION_STATE_CHANGED, this.onRTCConnectionStateChanged);\n      this.pusher.on(this.TWebLive.EVENT.RTC_CLIENT_BANNED, this.onRTCClientBanned);\n      this.pusher.on(this.TWebLive.EVENT.RTC_CLIENT_ERROR, this.onRTCError);\n    },\n    // eslint-disable-next-line no-unused-vars\n    onRTCConnectionStateChanged: function onRTCConnectionStateChanged(event) {},\n    // eslint-disable-next-line no-unused-vars\n    onRTCClientBanned: function onRTCClientBanned(event) {},\n    // eslint-disable-next-line no-unused-vars\n    onRTCError: function onRTCError(event) {},\n    //开启本地预览\n    setRenderView: function setRenderView() {\n      var _this = this;\n\n      this.pusher.setRenderView({\n        elementID: 'video-container',\n        audio: true,\n        video: true\n      }).then(function () {\n        // 设置背景\n        var el = window.document.getElementById('video-container').childNodes;\n        el[0].style.backgroundColor = 'rgba(0,0,0,0)';\n        _this.isStartCamera = false;\n      }).catch(function () {});\n    },\n    // 摄像头、麦克风操作\n    startCamera: function startCamera() {\n      var _this2 = this;\n\n      this.pusher.startCamera().then(function () {\n        _this2.isStartCamera = false;\n      }).catch(function () {});\n    },\n    stopCamera: function stopCamera() {\n      var _this3 = this;\n\n      this.pusher.stopCamera().then(function () {\n        _this3.isStartCamera = true;\n      }).catch(function () {});\n    },\n    startMicrophone: function startMicrophone() {\n      var _this4 = this;\n\n      this.pusher.startMicrophone().then(function () {\n        _this4.isMute = false;\n      }).catch(function () {});\n    },\n    stopMicrophone: function stopMicrophone() {\n      var _this5 = this;\n\n      this.pusher.stopMicrophone().then(function () {\n        _this5.isMute = true;\n      }).catch(function () {});\n    },\n    // 生成roomID\n    generateRoomID: function generateRoomID(min, max) {\n      return Math.floor(Math.random() * (max - min) + min).toString();\n    },\n    // 创建直播房间\n    createRoom: function () {\n      var _createRoom = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.roomID = this.generateRoomID(1000, 2000000000);\n                this.roomName = this.roomName ? this.roomName : \"\".concat(this.user.userID, \"\\u7684\\u76F4\\u64AD\");\n                _context2.next = 4;\n                return axios(\"https://service-62h5r0ea-1252463788.gz.apigw.tencentcs.com/release/forTestAdvanced?method=createRoom&appId=\".concat(this.user.sdkAppID, \"&type=groupLive&title=\").concat(this.roomName, \"&anchorId=\").concat(this.user.userID, \"&roomId=\").concat(this.roomID));\n\n              case 4:\n                this.$store.commit('updateGroupLiveInfo', {\n                  roomID: this.roomID,\n                  roomName: this.roomName\n                });\n                this.createGroupLiveAvChatRoom();\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function createRoom() {\n        return _createRoom.apply(this, arguments);\n      }\n\n      return createRoom;\n    }(),\n    // 解散直播间\n    destroyRoom: function () {\n      var _destroyRoom = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return axios(\"https://service-c2zjvuxa-1252463788.gz.apigw.tencentcs.com/release/forTest?method=destroyRoom&appId=\".concat(this.user.sdkAppID, \"&type=groupLive&roomId=\").concat(this.roomID));\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function destroyRoom() {\n        return _destroyRoom.apply(this, arguments);\n      }\n\n      return destroyRoom;\n    }(),\n    // 更新直播间 10s 上报一次，心跳保活，如果不上报，后台检测不到心跳会销毁房间\n    updateRoom: function updateRoom() {\n      axios(\"https://service-c2zjvuxa-1252463788.gz.apigw.tencentcs.com/release/forTest?method=updateRoom&appId=\".concat(this.user.sdkAppID, \"&type=groupLive&roomId=\").concat(this.roomID));\n    },\n    // 创建直播互动群\n    createGroupLiveAvChatRoom: function () {\n      var _createGroupLiveAvChatRoom = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.tim.createGroup({\n                  name: this.roomName,\n                  groupID: this.roomID,\n                  type: this.TIM.TYPES.GRP_AVCHATROOM\n                });\n\n              case 2:\n                this.$bus.$emit('join-group-live-avchatroom');\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function createGroupLiveAvChatRoom() {\n        return _createGroupLiveAvChatRoom.apply(this, arguments);\n      }\n\n      return createGroupLiveAvChatRoom;\n    }(),\n    //开始推流\n    startPushStream: function () {\n      var _startPushStream = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n        var _this6 = this;\n\n        var streamID, url;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.createRoom();\n\n              case 2:\n                //streamID 拼接规则： sdkappid_roomid_userid_main\n                streamID = \"\".concat(this.user.sdkAppID, \"_\").concat(this.roomID, \"_\").concat(this.user.userID, \"_main\"); // 对userSig进行encode,防止userSig中带有+时被浏览器解析为空格，导致trtc ws连接失败\n\n                url = \"room://livedomainname=tuikit.qcloud.com&sdkappid=\".concat(this.user.sdkAppID, \"&roomid=\").concat(this.roomID, \"&userid=\").concat(this.user.userID, \"&usersig=\").concat(encodeURIComponent(this.user.userSig), \"&streamid=\").concat(streamID);\n                this.pusher.startPush(url).then(function () {\n                  _this6.isPushingStream = true;\n\n                  _this6.sendNoticeToGroup(1);\n\n                  _this6.updateTimer = setInterval(function () {\n                    _this6.updateRoom();\n                  }, 10000);\n                  _this6.recordTimer = setInterval(function () {\n                    _this6.recordLiveTime();\n                  }, 1000);\n                }).catch(function () {});\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function startPushStream() {\n        return _startPushStream.apply(this, arguments);\n      }\n\n      return startPushStream;\n    }(),\n    // 停止推流\n    stopPushStream: function stopPushStream() {\n      // 派发关闭浮层组件事件\n      this.$bus.$emit('close-group-live');\n    },\n    stopPush: function () {\n      var _stopPush = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.destroyRoom();\n\n              case 2:\n                _context6.next = 4;\n                return this.pusher.stopPush();\n\n              case 4:\n                _context6.next = 6;\n                return this.tim.dismissGroup(this.roomID);\n\n              case 6:\n                // 解散直播群组\n                this.isPushingStream = false;\n                this.sendNoticeToGroup(0);\n\n              case 8:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function stopPush() {\n        return _stopPush.apply(this, arguments);\n      }\n\n      return stopPush;\n    }(),\n    // 给群内发送开始直播、结束直播自定义消息\n    // roomStatus 1 开始直播 0 结束直播\n    sendNoticeToGroup: function sendNoticeToGroup(roomStatus) {\n      if (!this.groupLiveInfo.groupID) {\n        return;\n      }\n\n      var _this$user$currentUse = this.user.currentUserProfile,\n          userID = _this$user$currentUse.userID,\n          nick = _this$user$currentUse.nick,\n          avatar = _this$user$currentUse.avatar;\n      var form = {\n        roomId: this.roomID,\n        roomName: this.roomName,\n        roomCover: avatar,\n        roomStatus: \"\".concat(roomStatus),\n        anchorName: nick,\n        version: 4,\n        roomType: 'liveRoom',\n        anchorId: userID,\n        businessID: 'group_live'\n      };\n      var message = this.tim.createCustomMessage({\n        to: this.groupLiveInfo.groupID,\n        conversationType: this.TIM.TYPES.CONV_GROUP,\n        priority: this.TIM.TYPES.MSG_PRIORITY_NORMAL,\n        payload: {\n          data: JSON.stringify(form),\n          description: '',\n          extension: ''\n        }\n      });\n      this.$store.commit('pushCurrentMessageList', message);\n      this.tim.sendMessage(message).then(function () {}).catch(function () {});\n    },\n    // 记录直播时间\n    recordLiveTime: function recordLiveTime() {\n      this.time++;\n      this.pusherTime = formatTime(this.time);\n    }\n  }\n};",{"version":3,"sources":["live-pusher.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"pusher\">\n    <div class=\"header-bar\">\n      <live-header fr=\"pusher\" :pusherTime=\"pusherTime\" :isPushingStream=\"isPushingStream\" :stopPushStream=\"stopPushStream\"/>\n      <div class=\"input-name-box\" v-show=\"!isPushingStream\">\n        <img class=\"avatar\" :src=\"anchorAvatar\" alt=\"\" />\n        <input class=\"room-name\" v-model=\"roomName\" placeholder=\"标题有趣吸引人气\" />\n      </div>\n    </div>\n    <div id=\"video-container\" class=\"video-container\">\n    </div>\n    <div class=\"setting-bar\">\n      <!-- <live-share v-if=\"isPushingStream\" /> -->\n      <div>\n        <div v-if=\"!isPushingStream\"  class=\"pusher-start cursor\" @click=\"startPushStream\">\n          <img class=\"pusher-icon\" src=\"../../../assets/image/web-pusher-start.png\">\n          <span class=\"play-text\">开始直播</span>\n        </div>\n        <div v-else class=\"pusher-start cursor\" @click=\"stopPushStream\">\n          <img class=\"pusher-icon\" src=\"../../../assets/image/web-pusher-stop.png\">\n          <span class=\"play-text\">结束直播</span>\n        </div>\n      </div>\n      <div>\n        <div v-if=\"isMute\" class=\"pusher-mic cursor\" @click=\"startMicrophone\">\n          <img class=\"pusher-icon\" src=\"../../../assets/image/close-mic.png\">\n          <span class=\"mic-text\">麦克风</span>\n        </div>\n        <div v-else class=\"pusher-mic cursor\" @click=\"stopMicrophone\">\n          <img class=\"pusher-icon\" src=\"../../../assets/image/open-mic.png\">\n          <span class=\"mic-text\">麦克风</span>\n        </div>\n      </div>\n      <div>\n        <div v-if=\"isStartCamera\" class=\"pusher-mic cursor\" style=\"right: 300px\" @click=\"startCamera\">\n          <svg width=\"16px\" height=\"16px\" viewBox=\"0 0 16 16\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n            <title>摄像头关闭</title>\n            <g id=\"页面-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n              <g id=\"j进度条备份\" transform=\"translate(-751.000000, -22.000000)\">\n                <g id=\"编组-9\" transform=\"translate(751.000000, 22.000000)\">\n                  <g id=\"编组-11\">\n                    <path d=\"M15,7.5 C15,11.6421356 11.6421356,15 7.5,15 C6.57050116,15 5.68049488,14.8309122 4.85906245,14.5218179 L6.43561423,12.8970864 C6.77997642,12.9646116 7.13585551,13 7.5,13 C10.5375661,13 13,10.5375661 13,7.5 C13,7.0789865 12.9526952,6.66902162 12.8631108,6.27513055 L14.4397563,4.65055194 C14.8008626,5.52907797 15,6.49128347 15,7.5 Z M7.5,0 C9.88955323,0 12.0181001,1.11750106 13.3915381,2.85840064 L11.9813778,4.31063973 C10.984196,2.91201268 9.34860401,2 7.5,2 C4.46243388,2 2,4.46243388 2,7.5 C2,9.40763139 2.97118511,11.0884303 4.44609208,12.0749336 L3.03637255,13.5276986 C1.1940301,12.1611583 0,9.97001947 0,7.5 C0,3.35786438 3.35786438,0 7.5,0 Z\" id=\"形状结合\" fill=\"#8A9099\" fill-rule=\"nonzero\"></path>\n                    <path d=\"M7.5,5 C8.54350703,5 9.43769004,5.63933214 9.81221332,6.5476607 L6.61637488,9.83935679 C5.67174144,9.48236445 5,8.56962904 5,7.5 C5,6.11928813 6.11928813,5 7.5,5 Z\" id=\"形状结合\" fill=\"#8A9099\"></path>\n                    <path d=\"\" id=\"形状结合\" stroke=\"#8A9099\" stroke-width=\"2\"></path>\n                    <line x1=\"13.3137085\" y1=\"2\" x2=\"2\" y2=\"13.3137085\" id=\"直线-5\" stroke=\"#8A9099\" stroke-width=\"2\" stroke-linecap=\"square\"></line>\n                  </g>\n                </g>\n              </g>\n            </g>\n          </svg>\n          <span class=\"mic-text\">摄像头</span>\n        </div>\n        <div v-else class=\"pusher-mic cursor\" style=\"right: 300px\" @click=\"stopCamera\">\n          <img class=\"pusher-icon\" src=\"../../../assets/image/camera-open.png\">\n          <span class=\"mic-text\">摄像头</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport { mapState } from 'vuex'\nimport liveHeader from './live-header'\n// import liveShare from './live-share'\nimport { formatTime } from '../../../utils/date.js'\n\nexport default {\n  name: 'livePusher',\n  data() {\n    return {\n      pusher: null,\n      roomID: 0,\n      roomName: '',\n      isPushingStream: false, // 是否正在推流\n      updateTimer: 0,\n      pusherTime: '00:00:00',\n      time: 0, // 直播时长 秒\n      recordTimer: null, // 记录直播时长\n      isMute: false,   //是否禁言\n      isStartCamera: true\n    }\n  },\n  computed: {\n    ...mapState({\n      user: state => state.user,\n      groupLiveInfo: state => state.groupLive.groupLiveInfo\n    }),\n    anchorAvatar() {\n      return this.user.currentUserProfile.avatar || 'https://imgcache.qq.com/open/qcloud/video/act/webim-avatar/avatar-2.png'\n    }\n  },\n  created() {\n    this.$store.commit('resetGroupLiveInfo', { roomID: 0 })\n  },\n  mounted() {\n    this.init()\n  },\n  async beforeDestroy() {\n    if (this.isPushingStream) {\n      clearInterval(this.updateTimer)\n      clearInterval(this.recordTimer)\n      await this.stopPush()\n    }\n  },\n  components: {\n    liveHeader,\n    // liveShare,\n  },\n  methods: {\n    // 初始化\n    init() {\n      this.pusher = this.TWebLive.createPusher({\n        userID: this.user.userID\n      })\n      this.setRenderView()\n      this.pusher.on(this.TWebLive.EVENT.RTC_CONNECTION_STATE_CHANGED, this.onRTCConnectionStateChanged)\n      this.pusher.on(this.TWebLive.EVENT.RTC_CLIENT_BANNED, this.onRTCClientBanned)\n      this.pusher.on(this.TWebLive.EVENT.RTC_CLIENT_ERROR, this.onRTCError)\n    },\n    // eslint-disable-next-line no-unused-vars\n    onRTCConnectionStateChanged(event) {},\n    // eslint-disable-next-line no-unused-vars\n    onRTCClientBanned(event) {},\n    // eslint-disable-next-line no-unused-vars\n    onRTCError(event) {},\n    //开启本地预览\n    setRenderView() {\n      this.pusher.setRenderView({\n        elementID: 'video-container',\n        audio: true,\n        video: true\n      }).then(() => {\n        // 设置背景\n       let el = window.document.getElementById('video-container').childNodes\n        el[0].style.backgroundColor = 'rgba(0,0,0,0)'\n        this.isStartCamera = false\n      }).catch(() => {})\n    },\n    // 摄像头、麦克风操作\n    startCamera() {\n      this.pusher.startCamera().then(() => {\n        this.isStartCamera = false\n      }).catch(() => {})\n    },\n    stopCamera() {\n      this.pusher.stopCamera().then(() => {\n        this.isStartCamera = true\n      }).catch(() => {})\n    },\n    startMicrophone() {\n      this.pusher.startMicrophone().then(() => {\n        this.isMute = false\n      }).catch(() => {})\n    },\n    stopMicrophone() {\n      this.pusher.stopMicrophone().then(() => {\n        this.isMute = true\n      }).catch(() => {})\n    },\n    // 生成roomID\n    generateRoomID(min, max) {\n      return Math.floor(Math.random()*(max - min) + min).toString()\n    },\n    // 创建直播房间\n    async createRoom() {\n      this.roomID = this.generateRoomID(1000, 2000000000)\n      this.roomName = this.roomName ? this.roomName : `${this.user.userID}的直播`\n      await axios (`https://service-62h5r0ea-1252463788.gz.apigw.tencentcs.com/release/forTestAdvanced?method=createRoom&appId=${this.user.sdkAppID}&type=groupLive&title=${this.roomName}&anchorId=${this.user.userID}&roomId=${this.roomID}`)\n      this.$store.commit('updateGroupLiveInfo', { roomID: this.roomID, roomName: this.roomName })\n      this.createGroupLiveAvChatRoom()\n    },\n    // 解散直播间\n    async destroyRoom() {\n      await axios (`https://service-c2zjvuxa-1252463788.gz.apigw.tencentcs.com/release/forTest?method=destroyRoom&appId=${this.user.sdkAppID}&type=groupLive&roomId=${this.roomID}`)\n    },\n    // 更新直播间 10s 上报一次，心跳保活，如果不上报，后台检测不到心跳会销毁房间\n    updateRoom() {\n      axios (`https://service-c2zjvuxa-1252463788.gz.apigw.tencentcs.com/release/forTest?method=updateRoom&appId=${this.user.sdkAppID}&type=groupLive&roomId=${this.roomID}`)\n    },\n    // 创建直播互动群\n    async createGroupLiveAvChatRoom() {\n      await this.tim.createGroup({\n        name: this.roomName,\n        groupID: this.roomID,\n        type: this.TIM.TYPES.GRP_AVCHATROOM,\n      })\n      this.$bus.$emit('join-group-live-avchatroom')\n    },\n    //开始推流\n    async startPushStream() {\n      await this.createRoom()\n      //streamID 拼接规则： sdkappid_roomid_userid_main\n      const streamID = `${this.user.sdkAppID}_${this.roomID}_${this.user.userID}_main`\n      // 对userSig进行encode,防止userSig中带有+时被浏览器解析为空格，导致trtc ws连接失败\n      const url = `room://livedomainname=tuikit.qcloud.com&sdkappid=${this.user.sdkAppID}&roomid=${this.roomID}&userid=${this.user.userID}&usersig=${encodeURIComponent(this.user.userSig)}&streamid=${streamID}`\n      this.pusher.startPush(url).then(() => {\n        this.isPushingStream = true\n        this.sendNoticeToGroup(1)\n        this.updateTimer = setInterval(() => {\n          this.updateRoom()\n        }, 10000)\n        this.recordTimer = setInterval(() => {\n          this.recordLiveTime()\n        }, 1000)\n      }).catch(() => {})\n    },\n    // 停止推流\n    stopPushStream() {\n      // 派发关闭浮层组件事件\n      this.$bus.$emit('close-group-live')\n    },\n    async stopPush() {\n      await this.destroyRoom()\n      await this.pusher.stopPush()\n      await this.tim.dismissGroup(this.roomID) // 解散直播群组\n      this.isPushingStream = false\n      this.sendNoticeToGroup(0)\n    },\n    // 给群内发送开始直播、结束直播自定义消息\n    // roomStatus 1 开始直播 0 结束直播\n    sendNoticeToGroup(roomStatus) {\n      if (!this.groupLiveInfo.groupID) {\n        return\n      }\n      const { userID, nick, avatar } = this.user.currentUserProfile\n      const form = {\n        roomId: this.roomID,\n        roomName: this.roomName,\n        roomCover: avatar,\n        roomStatus: `${roomStatus}`,\n        anchorName: nick,\n        version: 4,\n        roomType: 'liveRoom',\n        anchorId: userID,\n        businessID: 'group_live'\n      }\n      const message = this.tim.createCustomMessage({\n        to: this.groupLiveInfo.groupID,\n        conversationType: this.TIM.TYPES.CONV_GROUP,\n        priority: this.TIM.TYPES.MSG_PRIORITY_NORMAL,\n        payload: {\n          data: JSON.stringify(form),\n          description: '',\n          extension: '',\n        },\n      })\n      this.$store.commit('pushCurrentMessageList', message)\n      this.tim.sendMessage(message).then(() => {}).catch(() => {})\n    },\n    // 记录直播时间\n    recordLiveTime () {\n      this.time++\n      this.pusherTime = formatTime(this.time)\n    }\n  }\n}\n</script>\n\n<style lang=\"stylus\"  scoped>\n  ::-webkit-input-placeholder {\n    color: #fff\n  }\n  ::-moz-input-placeholder {\n    color: #fff\n  }\n  ::-ms-input-placeholder {\n    color: #fff\n  }\n  .cursor {\n    cursor: pointer;\n  }\n  .active {\n    color: #2d8cf0\n  }\n  .pusher {\n    position relative\n    width 100%\n    height 100%\n    background rgba(0, 0, 0, 1)\n    display flex\n    flex-flow column\n    flex-direction column\n    .video-container {\n      position relative\n      height calc(100% - 125px)\n      .stop-camera {\n        position absolute\n        top 0\n        right 0\n        bottom 0\n        left 0\n        background-color #ffffff\n        display flex\n        flex-direction column\n        justify-content center\n        align-items center\n      }\n    }\n    .header-bar {\n      position: relative;\n      width 100%\n      height 70px\n      background-color #363e47\n      padding 10px 10px 10px 20px\n      .input-name-box{\n        position absolute\n        left 0\n        top 0px\n        width calc(100% - 100px)\n        height 100%\n        display flex\n        align-items center\n        z-index 99\n        padding 10px 20px\n        .avatar{\n          width 50px\n          height 50px\n          border-radius 50%\n          margin 0px 10px 0px 0px\n        }\n        .room-name{\n          border hidden\n          outline-style none\n          height 40px\n          width  60%\n          font-size 20px\n          color #fff\n          background rgba(255, 255,255, 0)\n          border-bottom 1px solid #fff\n        }\n      }\n    }\n    .setting-bar {\n      position: relative;\n      width 100%\n      height 55px\n      background-color #363e47\n      .pusher-start {\n        position: absolute;\n        right 0\n        bottom 0\n        width 210px\n        height 55px\n        background #5cadff\n        display: flex;\n        justify-content: center;\n        align-items: center;\n      }\n      .pusher-mic{\n        position: absolute;\n        right 220px\n        bottom 0\n        /*width 210px*/\n        height 55px\n        display: flex;\n        justify-content: center;\n        align-items: center\n        padding 0 10px\n      }\n      .play-text{\n        font-size 16px\n        color #ffffff\n        margin-left 5px\n      }\n      .pusher-icon{\n        width 14px\n        height 14px\n      }\n      .mic-text{\n        font-size 14px\n        color #8A9099\n        margin-left 5px\n      }\n    }\n  }\n</style>\n"],"sourceRoot":"src/components/group-live/components"}]}