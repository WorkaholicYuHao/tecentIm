{"remainingRequest":"/Users/yuhao/TIMSDK/H5/node_modules/thread-loader/dist/cjs.js!/Users/yuhao/TIMSDK/H5/node_modules/babel-loader/lib/index.js!/Users/yuhao/TIMSDK/H5/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuhao/TIMSDK/H5/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuhao/TIMSDK/H5/src/components/message/message-item.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuhao/TIMSDK/H5/src/components/message/message-item.vue","mtime":1616982605604},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _defineProperty from \"/Users/yuhao/TIMSDK/H5/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nimport MessageStatusIcon from \"./message-status-icon.vue\";\nimport MessageHeader from \"./message-header\";\nimport MessageFooter from \"./message-footer\";\nimport FileElement from \"./message-elements/file-element.vue\";\nimport FaceElement from \"./message-elements/face-element.vue\";\nimport ImageElement from \"./message-elements/image-element.vue\";\nimport TextElement from \"./message-elements/text-element.vue\";\nimport SoundElement from \"./message-elements/sound-element.vue\";\nimport VideoElement from \"./message-elements/video-element.vue\";\nimport GroupTipElement from \"./message-elements/group-tip-element.vue\";\nimport GroupSystemNoticeElement from \"./message-elements/group-system-notice-element.vue\";\nimport CustomElement from \"./message-elements/custom-element.vue\";\nimport GeoElement from \"./message-elements/geo-element.vue\";\nexport default {\n  name: 'MessageItem',\n  props: {\n    message: {\n      type: Object,\n      required: true\n    }\n  },\n  components: {\n    MessageHeader: MessageHeader,\n    MessageFooter: MessageFooter,\n    MessageStatusIcon: MessageStatusIcon,\n    FileElement: FileElement,\n    FaceElement: FaceElement,\n    ImageElement: ImageElement,\n    TextElement: TextElement,\n    SoundElement: SoundElement,\n    GroupTipElement: GroupTipElement,\n    GroupSystemNoticeElement: GroupSystemNoticeElement,\n    CustomElement: CustomElement,\n    VideoElement: VideoElement,\n    GeoElement: GeoElement\n  },\n  data: function data() {\n    return {\n      renderDom: []\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapState({\n    currentConversation: function currentConversation(state) {\n      return state.conversation.currentConversation;\n    },\n    currentUserProfile: function currentUserProfile(state) {\n      return state.user.currentUserProfile;\n    }\n  })), {}, {\n    // 是否显示头像，群提示消息不显示头像\n    showAvatar: function showAvatar() {\n      if (this.currentConversation.type === 'C2C' && !this.message.isRevoked) {\n        // C2C且没有撤回的消息\n        return true;\n      } else if (this.currentConversation.type === 'GROUP' && !this.message.isRevoked) {\n        // group且没有撤回的消息\n        return this.message.type !== this.TIM.TYPES.MSG_GRP_TIP;\n      }\n\n      return false;\n    },\n    avatar: function avatar() {\n      if (this.currentConversation.type === 'C2C') {\n        return this.message.avatar;\n      } else if (this.currentConversation.type === 'GROUP') {\n        return this.isMine ? this.currentUserProfile.avatar : this.message.avatar;\n      } else {\n        return '';\n      }\n    },\n    currentConversationType: function currentConversationType() {\n      return this.currentConversation.type;\n    },\n    isMine: function isMine() {\n      // console.log(this.currentUserProfile, this.currentConversation);\n      return this.message.flow === 'out';\n    },\n    messagePosition: function messagePosition() {\n      if (['TIMGroupTipElem', 'TIMGroupSystemNoticeElem'].includes(this.message.type)) {\n        return 'position-center';\n      }\n\n      if (this.message.isRevoked) {\n        // 撤回消息\n        return 'position-center';\n      }\n\n      if (this.isMine) {\n        return 'position-right';\n      } else {\n        return 'position-left';\n      }\n    },\n    showMessageHeader: function showMessageHeader() {\n      if (['TIMGroupTipElem', 'TIMGroupSystemNoticeElem'].includes(this.message.type)) {\n        return false;\n      }\n\n      if (this.message.isRevoked) {\n        // 撤回消息\n        return false;\n      }\n\n      return true;\n    }\n  }),\n  methods: {\n    showGroupMemberProfile: function showGroupMemberProfile(event) {\n      var _this = this;\n\n      this.tim.getGroupMemberProfile({\n        groupID: this.message.to,\n        userIDList: [this.message.from]\n      }).then(function (_ref) {\n        var memberList = _ref.data.memberList;\n\n        if (memberList[0]) {\n          _this.$bus.$emit('showMemberProfile', {\n            event: event,\n            member: memberList[0]\n          });\n        }\n      });\n    }\n  }\n};",null]}