{"remainingRequest":"/Users/yuhao/TIMSDK/H5/node_modules/babel-loader/lib/index.js!/Users/yuhao/TIMSDK/H5/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuhao/TIMSDK/H5/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuhao/TIMSDK/H5/src/components/message/trtc-calling/group-member-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuhao/TIMSDK/H5/src/components/message/trtc-calling/group-member-list.vue","mtime":1616982605605},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/yuhao/TIMSDK/H5/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nexport default {\n  props: ['type'],\n  data: function data() {\n    return {\n      callingList: [],\n      addGroupMemberVisible: false,\n      currentMemberID: '',\n      count: 30 // 显示的群成员数量\n\n    };\n  },\n  components: {},\n  computed: _objectSpread(_objectSpread({}, mapState({\n    userID: function userID(state) {\n      return state.user.userID;\n    },\n    currentConversation: function currentConversation(state) {\n      return state.conversation.currentConversation;\n    },\n    currentMemberList: function currentMemberList(state) {\n      return state.group.currentMemberList;\n    }\n  })), {}, {\n    showLoadMore: function showLoadMore() {\n      return this.members.length < this.currentConversation.groupProfile.memberCount;\n    },\n    members: function members() {\n      return this.currentMemberList.slice(0, this.count);\n    }\n  }),\n  methods: {\n    handleCheckedMembersChange: function handleCheckedMembersChange() {\n      this.$emit('getList', this.callingList);\n    },\n    getGroupMemberAvatarText: function getGroupMemberAvatarText(role) {\n      switch (role) {\n        case 'Owner':\n          return '群主';\n\n        case 'Admin':\n          return '管理员';\n\n        default:\n          return '群成员';\n      }\n    },\n    loadMore: function loadMore() {\n      var _this = this;\n\n      this.$store.dispatch('getGroupMemberList', this.groupProfile.groupID).then(function () {\n        _this.count += 30;\n      });\n    }\n  }\n};",{"version":3,"sources":["group-member-list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA,SAAA,QAAA,QAAA,MAAA;AACA,eAAA;AACA,EAAA,KAAA,EAAA,CAAA,MAAA,CADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,EADA;AAEA,MAAA,qBAAA,EAAA,KAFA;AAGA,MAAA,eAAA,EAAA,EAHA;AAIA,MAAA,KAAA,EAAA,EAJA,CAIA;;AAJA,KAAA;AAMA,GATA;AAUA,EAAA,UAAA,EAAA,EAVA;AAYA,EAAA,QAAA,kCACA,QAAA,CAAA;AACA,IAAA,MAAA,EAAA,gBAAA,KAAA;AAAA,aAAA,KAAA,CAAA,IAAA,CAAA,MAAA;AAAA,KADA;AAEA,IAAA,mBAAA,EAAA,6BAAA,KAAA;AAAA,aAAA,KAAA,CAAA,YAAA,CAAA,mBAAA;AAAA,KAFA;AAGA,IAAA,iBAAA,EAAA,2BAAA,KAAA;AAAA,aAAA,KAAA,CAAA,KAAA,CAAA,iBAAA;AAAA;AAHA,GAAA,CADA;AAMA,IAAA,YANA,0BAMA;AACA,aAAA,KAAA,OAAA,CAAA,MAAA,GAAA,KAAA,mBAAA,CAAA,YAAA,CAAA,WAAA;AACA,KARA;AASA,IAAA,OATA,qBASA;AACA,aAAA,KAAA,iBAAA,CAAA,KAAA,CAAA,CAAA,EAAA,KAAA,KAAA,CAAA;AACA;AAXA,IAZA;AAyBA,EAAA,OAAA,EAAA;AACA,IAAA,0BADA,wCACA;AACA,WAAA,KAAA,CAAA,SAAA,EAAA,KAAA,WAAA;AACA,KAHA;AAIA,IAAA,wBAJA,oCAIA,IAJA,EAIA;AACA,cAAA,IAAA;AACA,aAAA,OAAA;AACA,iBAAA,IAAA;;AACA,aAAA,OAAA;AACA,iBAAA,KAAA;;AACA;AACA,iBAAA,KAAA;AANA;AAQA,KAbA;AAcA,IAAA,QAdA,sBAcA;AAAA;;AACA,WAAA,MAAA,CACA,QADA,CACA,oBADA,EACA,KAAA,YAAA,CAAA,OADA,EAEA,IAFA,CAEA,YAAA;AACA,QAAA,KAAA,CAAA,KAAA,IAAA,EAAA;AACA,OAJA;AAKA;AApBA;AAzBA,CAAA","sourcesContent":["<template>\n    <div class=\"group-member-list-wrapper\">\n        <div class=\"header\">\n            <span class=\"member-count text-ellipsis\">群成员：{{currentConversation.groupProfile.memberCount}}</span>\n        </div>\n        <div class=\"scroll-content\">\n            <div class=\"group-member-list\">\n                <el-checkbox-group v-model=\"callingList\" @change=\"handleCheckedMembersChange\">\n                    <el-checkbox v-if=\"type === 'groupAt'\"  :label=\"JSON.stringify({userID:this.TIM.TYPES.MSG_AT_ALL,nick:'所有人'})\" >\n                        <div class=\"group-member\">\n                            <avatar  :src=\"''\" />\n                            <div class=\"member-name text-ellipsis\">\n                                <span >所有人</span>\n                            </div>\n                        </div>\n                    </el-checkbox>\n                    <el-checkbox v-for=\"member in members\" :disabled=\"member.userID===userID\" :label=\"JSON.stringify({userID:member.userID,nick:member.nameCard || member.nick || member.userID})\" :key=\"member.userID\">\n                       <div class=\"group-member\">\n                           <avatar  :src=\"member.avatar\" />\n                           <div class=\"member-name text-ellipsis\">\n                               <span v-if=\"member.nameCard\" >{{ member.nameCard }}</span>\n                               <span v-else-if=\"member.nick\" >{{ member.nick }}</span>\n                               <span v-else >{{ member.userID }}</span>\n                           </div>\n                       </div>\n                    </el-checkbox>\n                </el-checkbox-group>\n            </div>\n        </div>\n        <div class=\"more\">\n            <el-button v-if=\"showLoadMore\" type=\"text\" @click=\"loadMore\">查看更多</el-button>\n        </div>\n    </div>\n</template>\n\n<script>\n  import { mapState } from 'vuex'\n  export default {\n    props:['type'],\n    data() {\n      return {\n        callingList:[],\n        addGroupMemberVisible: false,\n        currentMemberID: '',\n        count: 30 // 显示的群成员数量\n      }\n    },\n    components: {\n    },\n    computed: {\n      ...mapState({\n        userID: state => state.user.userID,\n        currentConversation: state => state.conversation.currentConversation,\n        currentMemberList: state => state.group.currentMemberList\n      }),\n      showLoadMore() {\n        return this.members.length < this.currentConversation.groupProfile.memberCount\n      },\n      members() {\n        return this.currentMemberList.slice(0, this.count)\n      }\n    },\n    methods: {\n      handleCheckedMembersChange() {\n        this.$emit('getList',this.callingList)\n      },\n      getGroupMemberAvatarText(role) {\n        switch (role) {\n          case 'Owner':\n            return '群主'\n          case 'Admin':\n            return '管理员'\n          default:\n            return '群成员'\n        }\n      },\n      loadMore() {\n        this.$store\n          .dispatch('getGroupMemberList', this.groupProfile.groupID)\n          .then(() => {\n            this.count += 30\n          })\n      }\n    }\n  }\n</script>\n\n<style lang=\"stylus\" scoped>\n    .group-member-list-wrapper\n        .header\n            height 50px\n            padding 10px 16px 10px 20px\n            border-bottom 1px solid $border-base\n            .member-count\n                display inline-block\n                max-width 130px\n                line-height 30px\n                font-size 14px\n                vertical-align bottom\n            .btn-add-member\n                width 30px\n                height 30px\n                font-size 28px\n                text-align center\n                line-height 32px\n                cursor pointer\n                float right\n                &:hover\n                    color $light-primary\n        .scroll-content\n            max-height: 250px;\n            overflow-y: scroll;\n            padding 10px 15px 10px 15px\n            width 100%\n            .group-member-list\n                display flex\n                justify-content flex-start\n                flex-wrap wrap\n                width 100%\n            .group-member\n                width 100px\n                height 80px\n                display: flex;\n                justify-content center\n                align-content center\n                flex-direction: column;\n                text-align: center;\n                color: $black;\n                cursor: pointer;\n                .avatar\n                    width 40px\n                    height 40px\n                    border-radius 50%\n                    margin 0 auto\n                .member-name\n                    font-size 12px\n                    width: 100px;\n                    text-align center\n        .more\n            padding 0 20px\n            border-bottom 1px solid $border-base\n\n\n</style>\n"],"sourceRoot":"src/components/message/trtc-calling"}]}