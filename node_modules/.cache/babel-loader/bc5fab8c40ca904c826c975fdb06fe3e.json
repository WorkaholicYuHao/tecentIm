{"remainingRequest":"/Users/yuhao/TIMSDK/H5/node_modules/thread-loader/dist/cjs.js!/Users/yuhao/TIMSDK/H5/node_modules/babel-loader/lib/index.js!/Users/yuhao/TIMSDK/H5/node_modules/eslint-loader/index.js??ref--13-0!/Users/yuhao/TIMSDK/H5/src/store/modules/group.js","dependencies":[{"path":"/Users/yuhao/TIMSDK/H5/src/store/modules/group.js","mtime":1616982605608},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _toConsumableArray from \"/Users/yuhao/TIMSDK/H5/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport tim from 'tim';\nvar groupModules = {\n  state: {\n    groupList: [],\n    currentMemberList: [],\n    createGroupModelVisible: false\n  },\n  getters: {\n    hasGroupList: function hasGroupList(state) {\n      return state.groupList.length > 0;\n    }\n  },\n  mutations: {\n    updateGroupList: function updateGroupList(state, groupList) {\n      state.groupList = groupList;\n    },\n    updateCreateGroupModelVisible: function updateCreateGroupModelVisible(state, visible) {\n      state.createGroupModelVisible = visible;\n    },\n    updateCurrentMemberList: function updateCurrentMemberList(state, memberList) {\n      state.currentMemberList = [].concat(_toConsumableArray(state.currentMemberList), _toConsumableArray(memberList));\n    },\n    deleteGroupMemeber: function deleteGroupMemeber(state, userID) {\n      state.currentMemberList = state.currentMemberList.filter(function (member) {\n        return member.userID !== userID;\n      });\n    },\n    deleteGroupMemberList: function deleteGroupMemberList(state, userIDList) {\n      state.currentMemberList = state.currentMemberList.filter(function (member) {\n        return !userIDList.includes(member.userID);\n      });\n    },\n    resetCurrentMemberList: function resetCurrentMemberList(state) {\n      state.currentMemberList = [];\n    },\n    reset: function reset(state) {\n      Object.assign(state, {\n        groupList: [],\n        currentMemberList: [],\n        createGroupModelVisible: false\n      });\n    }\n  },\n  actions: {\n    updateGroupList: function updateGroupList(context, groupList) {\n      context.commit('updateGroupList', groupList);\n    },\n    getGroupMemberList: function getGroupMemberList(context, groupID) {\n      return tim.getGroupMemberList({\n        groupID: groupID,\n        offset: context.state.currentMemberList.length,\n        count: 30\n      }).then(function (imResponse) {\n        context.commit('updateCurrentMemberList', imResponse.data.memberList);\n        return imResponse;\n      });\n    }\n  }\n};\nexport default groupModules;",null]}