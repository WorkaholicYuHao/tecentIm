{"remainingRequest":"/Users/yuhao/TIMSDK/H5/node_modules/thread-loader/dist/cjs.js!/Users/yuhao/TIMSDK/H5/node_modules/babel-loader/lib/index.js!/Users/yuhao/TIMSDK/H5/node_modules/eslint-loader/index.js??ref--13-0!/Users/yuhao/TIMSDK/H5/src/store/modules/user.js","dependencies":[{"path":"/Users/yuhao/TIMSDK/H5/src/store/modules/user.js","mtime":1616982605608},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import tim from \"../../tim\";\nvar user = {\n  state: {\n    currentUserProfile: {},\n    isLogin: false,\n    isSDKReady: false,\n    // TIM SDK 是否 ready\n    userID: 0,\n    userSig: '',\n    sdkAppID: 0\n  },\n  mutations: {\n    updateCurrentUserProfile: function updateCurrentUserProfile(state, userProfile) {\n      state.currentUserProfile = userProfile;\n    },\n    toggleIsLogin: function toggleIsLogin(state, isLogin) {\n      state.isLogin = typeof isLogin === 'undefined' ? !state.isLogin : isLogin;\n    },\n    toggleIsSDKReady: function toggleIsSDKReady(state, isSDKReady) {\n      state.isSDKReady = typeof isSDKReady === 'undefined' ? !state.isSDKReady : isSDKReady;\n    },\n    reset: function reset(state) {\n      Object.assign(state, {\n        currentUserProfile: {},\n        isLogin: false,\n        isSDKReady: false // TIM SDK 是否 ready\n\n      });\n    },\n    GET_USER_INFO: function GET_USER_INFO(state, payload) {\n      state.userID = payload.userID;\n      state.userSig = payload.userSig;\n      state.sdkAppID = payload.sdkAppID;\n    }\n  },\n  actions: {\n    // login(context, userID) {\n    //   tim\n    //     .login({\n    //       userID,\n    //       userSig: window.genTestUserSig(userID).userSig\n    //     })\n    //     .then(() => {\n    //       context.commit('toggleIsLogin', true)\n    //       context.commit('startComputeCurrent')\n    //       window.$message({ type: 'success', message: '登录成功' })\n    //     })\n    //     .catch(imError => {\n    //       if (imError.code === 2000) {\n    //         window.$message.error(imError.message + ', 请检查是否正确填写了 SDKAPPID')\n    //       } else {\n    //         window.$message.error(imError.message)\n    //       }\n    //     })\n    // },\n    logout: function logout(context) {\n      // 若有当前会话，在退出登录时已读上报\n      if (context.rootState.conversation.currentConversation.conversationID) {\n        tim.setMessageRead({\n          conversationID: context.rootState.conversation.currentConversation.conversationID\n        });\n      }\n\n      tim.logout().then(function () {\n        context.commit('toggleIsLogin');\n        context.commit('stopComputeCurrent');\n        context.commit('reset');\n      });\n    }\n  }\n};\nexport default user;",null]}