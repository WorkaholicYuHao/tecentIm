{"remainingRequest":"/Users/yuhao/TIMSDK/H5/node_modules/thread-loader/dist/cjs.js!/Users/yuhao/TIMSDK/H5/node_modules/babel-loader/lib/index.js!/Users/yuhao/TIMSDK/H5/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuhao/TIMSDK/H5/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuhao/TIMSDK/H5/src/components/conversation/conversationProfile/user-profile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuhao/TIMSDK/H5/src/components/conversation/conversationProfile/user-profile.vue","mtime":1616982605598},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.find-index\";\nimport _defineProperty from \"/Users/yuhao/TIMSDK/H5/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nexport default {\n  props: {\n    userProfile: {\n      type: Object,\n      required: true\n    }\n  },\n  computed: _objectSpread(_objectSpread({}, mapState({\n    blacklist: function blacklist(state) {\n      return state.blacklist.blacklist;\n    },\n    myUserID: function myUserID(state) {\n      return state.user.currentUserProfile.userID;\n    }\n  })), {}, {\n    isInBlacklist: function isInBlacklist() {\n      var _this = this;\n\n      return this.blacklist.findIndex(function (item) {\n        return item.userID === _this.userProfile.userID;\n      }) >= 0;\n    },\n    gender: function gender() {\n      switch (this.userProfile.gender) {\n        case this.TIM.TYPES.GENDER_MALE:\n          return '男';\n\n        case this.TIM.TYPES.GENDER_FEMALE:\n          return '女';\n\n        default:\n          return '未设置';\n      }\n    },\n    genderClass: function genderClass() {\n      switch (this.userProfile.gender) {\n        case this.TIM.TYPES.GENDER_MALE:\n          return 'icon-male';\n\n        case this.TIM.TYPES.GENDER_FEMALE:\n          return 'icon-female';\n\n        default:\n          return '';\n      }\n    }\n  }),\n  methods: {\n    addToBlackList: function addToBlackList() {\n      var _this2 = this;\n\n      this.tim.addToBlacklist({\n        userIDList: [this.userProfile.userID]\n      }).then(function () {\n        _this2.$store.dispatch('getBlacklist');\n      }).catch(function (imError) {\n        _this2.$store.commit('showMessage', {\n          message: imError.message,\n          type: 'error'\n        });\n      });\n    },\n    removeFromBlacklist: function removeFromBlacklist() {\n      var _this3 = this;\n\n      this.tim.removeFromBlacklist({\n        userIDList: [this.userProfile.userID]\n      }).then(function () {\n        _this3.$store.commit('removeFromBlacklist', _this3.userProfile.userID);\n      }).catch(function (error) {\n        _this3.$store.commit('showMessage', {\n          type: 'error',\n          message: error.message\n        });\n      });\n    }\n  }\n};",null]}