{"remainingRequest":"/Users/yuhao/TIMSDK/H5/node_modules/thread-loader/dist/cjs.js!/Users/yuhao/TIMSDK/H5/node_modules/babel-loader/lib/index.js!/Users/yuhao/TIMSDK/H5/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuhao/TIMSDK/H5/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuhao/TIMSDK/H5/src/components/group-live/components/live-header.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuhao/TIMSDK/H5/src/components/group-live/components/live-header.vue","mtime":1616982605599},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/yuhao/TIMSDK/H5/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/yuhao/TIMSDK/H5/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nexport default {\n  name: 'liveHeader',\n  props: {\n    fr: {\n      type: String,\n      requred: true\n    },\n    isPushingStream: {\n      type: Boolean,\n      default: false\n    },\n    stopPushStream: {\n      type: Function\n    },\n    pusherTime: {\n      type: String,\n      default: ''\n    }\n  },\n  data: function data() {\n    return {\n      nick: '',\n      avatar: 'https://imgcache.qq.com/open/qcloud/video/act/webim-avatar/avatar-2.png',\n      onlineMemberCount: 0,\n      timer: null,\n      onlineList: []\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapState({\n    groupLiveInfo: function groupLiveInfo(state) {\n      return state.groupLive.groupLiveInfo;\n    }\n  })), {}, {\n    showLiveInfo: function showLiveInfo() {\n      return this.fr === 'pusher' && this.isPushingStream || this.fr === 'player';\n    },\n    roomName: function roomName() {\n      return this.groupLiveInfo.roomName || \"\".concat(this.groupLiveInfo.anchorID, \"\\u7684\\u76F4\\u64AD\");\n    }\n  }),\n  mounted: function mounted() {\n    var _this = this;\n\n    this.getAnchorProfile();\n\n    if (this.fr === 'player') {\n      this.timer = setInterval(function () {\n        _this.getGroupOnlineMemberCount();\n      }, 5000);\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.timer && clearInterval(this.timer);\n  },\n  methods: {\n    closeLiveMask: function closeLiveMask() {\n      if (this.fr === 'pusher') {\n        this.stopPushStream();\n        return;\n      }\n\n      this.$store.commit('updateGroupLiveInfo', {\n        isNeededQuitRoom: 1\n      });\n      this.$bus.$emit('close-group-live');\n    },\n    getAnchorProfile: function () {\n      var _getAnchorProfile = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.tim.getUserProfile({\n                  userIDList: [this.groupLiveInfo.anchorID]\n                });\n\n              case 2:\n                res = _context.sent;\n\n                if (res.code === 0) {\n                  this.nick = res.data[0].nick || res.data[0].userID;\n                  this.avatar = res.data[0].avatar || 'https://imgcache.qq.com/open/qcloud/video/act/webim-avatar/avatar-2.png';\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getAnchorProfile() {\n        return _getAnchorProfile.apply(this, arguments);\n      }\n\n      return getAnchorProfile;\n    }(),\n    getGroupOnlineMemberCount: function () {\n      var _getGroupOnlineMemberCount = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.tim.getGroupOnlineMemberCount(this.groupLiveInfo.roomID);\n\n              case 2:\n                res = _context2.sent;\n\n                if (res.code === 0 && res.data) {\n                  this.onlineMemberCount = res.data.memberCount;\n                }\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getGroupOnlineMemberCount() {\n        return _getGroupOnlineMemberCount.apply(this, arguments);\n      }\n\n      return getGroupOnlineMemberCount;\n    }()\n  },\n  watch: {\n    isPushingStream: function isPushingStream(val) {\n      var _this2 = this;\n\n      if (val && this.fr === 'pusher') {\n        this.timer = setInterval(function () {\n          _this2.getGroupOnlineMemberCount();\n        }, 5000);\n      }\n    }\n  }\n};",null]}