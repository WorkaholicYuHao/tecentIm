{"remainingRequest":"/Users/yuhao/TIMSDK/H5/node_modules/thread-loader/dist/cjs.js!/Users/yuhao/TIMSDK/H5/node_modules/babel-loader/lib/index.js!/Users/yuhao/TIMSDK/H5/node_modules/eslint-loader/index.js??ref--13-0!/Users/yuhao/TIMSDK/H5/src/utils/common.js","dependencies":[{"path":"/Users/yuhao/TIMSDK/H5/src/utils/common.js","mtime":1616982605609},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/yuhao/TIMSDK/H5/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport TIM from 'tim-js-sdk';\nexport function translateGroupSystemNotice(message) {\n  var groupName = message.payload.groupProfile.name || message.payload.groupProfile.groupID;\n\n  switch (message.payload.operationType) {\n    case 1:\n      return \"\".concat(message.payload.operatorID, \" \\u7533\\u8BF7\\u52A0\\u5165\\u7FA4\\u7EC4\\uFF1A\").concat(groupName);\n\n    case 2:\n      return \"\\u6210\\u529F\\u52A0\\u5165\\u7FA4\\u7EC4\\uFF1A\".concat(groupName);\n\n    case 3:\n      return \"\\u7533\\u8BF7\\u52A0\\u5165\\u7FA4\\u7EC4\\uFF1A\".concat(groupName, \"\\u88AB\\u62D2\\u7EDD\");\n\n    case 4:\n      return \"\\u4F60\\u88AB\\u7BA1\\u7406\\u5458\".concat(message.payload.operatorID, \"\\u8E22\\u51FA\\u7FA4\\u7EC4\\uFF1A\").concat(groupName);\n\n    case 5:\n      return \"\\u7FA4\\uFF1A\".concat(groupName, \" \\u5DF2\\u88AB\").concat(message.payload.operatorID, \"\\u89E3\\u6563\");\n\n    case 6:\n      return \"\".concat(message.payload.operatorID, \"\\u521B\\u5EFA\\u7FA4\\uFF1A\").concat(groupName);\n\n    case 7:\n      return \"\".concat(message.payload.operatorID, \"\\u9080\\u8BF7\\u4F60\\u52A0\\u7FA4\\uFF1A\").concat(groupName);\n\n    case 8:\n      return \"\\u4F60\\u9000\\u51FA\\u7FA4\\u7EC4\\uFF1A\".concat(groupName);\n\n    case 9:\n      return \"\\u4F60\\u88AB\".concat(message.payload.operatorID, \"\\u8BBE\\u7F6E\\u4E3A\\u7FA4\\uFF1A\").concat(groupName, \"\\u7684\\u7BA1\\u7406\\u5458\");\n\n    case 10:\n      return \"\\u4F60\\u88AB\".concat(message.payload.operatorID, \"\\u64A4\\u9500\\u7FA4\\uFF1A\").concat(groupName, \"\\u7684\\u7BA1\\u7406\\u5458\\u8EAB\\u4EFD\");\n\n    case 255:\n      return '自定义群系统通知: ' + message.payload.userDefinedField;\n  }\n}\nexport var errorMap = {\n  500: '服务器错误',\n  602: '用户名或密码不合法',\n  610: '用户名格式错误',\n  612: '用户已存在',\n  620: '用户不存在',\n  621: '密码错误'\n};\nexport function filterCallingMessage(currentMessageList) {\n  currentMessageList.forEach(function (item) {\n    if (item.callType) {\n      // 对于自己伪造的消息不需要解析\n      return;\n    }\n\n    if (item.type === TIM.TYPES.MSG_CUSTOM) {\n      var payloadData = {};\n\n      try {\n        payloadData = JSON.parse(item.payload.data);\n      } catch (e) {\n        payloadData = {};\n      }\n\n      if (payloadData.businessID === 1) {\n        if (item.conversationType === TIM.TYPES.CONV_GROUP) {\n          if (payloadData.actionType === 5) {\n            item.nick = payloadData.inviteeList ? payloadData.inviteeList.join(',') : item.from;\n          }\n\n          var _text = window.trtcCalling.extractCallingInfoFromMessage(item);\n\n          var group_text = \"\".concat(_text);\n          item.type = TIM.TYPES.MSG_GRP_TIP;\n          var customData = {\n            operationType: 256,\n            text: group_text,\n            userIDList: []\n          };\n          item.payload = customData; //JSON.stringify(customData)\n        }\n\n        if (item.conversationType === TIM.TYPES.CONV_C2C) {\n          var c2c_text = window.trtcCalling.extractCallingInfoFromMessage(item);\n          var _customData = {\n            text: c2c_text\n          };\n          item.payload = _customData; //JSON.stringify(customData)\n        }\n      }\n    }\n  });\n}",null]}